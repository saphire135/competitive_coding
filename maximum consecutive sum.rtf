{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 public class Solution \{\
    // DO NOT MODIFY THE LIST. IT IS READ ONLY\
    public int maximumGap(final List<Integer> A) \{\
        if (A.size() < 2)\
            return 0;\
        int max = Integer.MIN_VALUE;\
        int min = Integer.MAX_VALUE;\
        for (int i : A) \{\
            if (i > max)\
                max = i;\
            if (i < min)\
                min = i;\
        \}\
        int bucketSize = Math.max((max-min)/(A.size()-1),1);\
        int num_buckets = (max-min)/bucketSize + 1;\
        \
        int[] max_arr = new int[num_buckets];\
        int[] min_arr = new int[num_buckets];\
        \
        Arrays.fill(max_arr,Integer.MIN_VALUE);\
        Arrays.fill(min_arr,Integer.MAX_VALUE);\
        \
        for (int i : A) \{\
            int bucket_index = (i-min)/bucketSize;\
            max_arr[bucket_index] = Math.max(max_arr[bucket_index],i);\
            min_arr[bucket_index] = Math.min(min_arr[bucket_index],i);\
        \}\
        \
        int prevBucketMax = min, max_gap = 0;\
        \
        for (int i = 0; i < num_buckets; i++) \{\
            if (min_arr[i] == Integer.MAX_VALUE)\
                continue;\
            max_gap = Math.max(max_gap,min_arr[i]-prevBucketMax);\
            prevBucketMax = max_arr[i];\
        \}\
        \
        return max_gap;\
    \}\
\}}